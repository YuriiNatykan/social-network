{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","s","descriptionBlock","src","photos","large","Preloader","Post","item","alt","message","like","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPosts","React","memo","postsElements","posts","reverse","map","p","postBlock","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.6ecf290c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__6y-b0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__bHavf\",\"posts\":\"MyPosts_posts__3KIE5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__Im4Vn\",\"like\":\"Post_like__2ytyQ\"};","import React from 'react';\r\nimport {useState, useEffect} from \"react\";\r\n\r\n//хуки - ф-я которая мониторится реактом и запускает их при изменении\r\n//хуки нельзя использовать в циклах, в if\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n    //синхронизация данных, когда изменится статус\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n\r\n        return (\r\n            <div>\r\n                {!editMode &&\r\n                <div >\r\n                    <span onDoubleClick={activateEditMode}>{props.status || \"---\"}</span>\r\n                </div>\r\n                }\r\n                {editMode &&\r\n                <div>\r\n                    <input  onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}\r\n                    value={status}/>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile,status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large} />\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://www.kinonews.ru/insimgs/2019/newsimg/newsimg87089.jpg\" alt=\"\" />\r\n            { props.message }\r\n            <div className={s.like}>\r\n                <img src=\"https://pngimg.com/uploads/like/like_PNG90.png\" alt=\"\" />\r\n                { props.likesCount }\r\n                <img src=\"https://www.pinclipart.com/picdir/middle/76-767623_facebook-like-thumb-dislike-png-clipart.png\" alt=\"\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"}\r\n            validate={[required, maxLength10]}/>\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>;\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map(p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (value) => {\r\n        props.addPost(value.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postBlock}>\r\n            <h3>MyPosts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts","import {addPostActionCreator} from \"../../../redux/prof-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/prof-reducer\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth:state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter\r\n)(ProfileContainer)"],"sourceRoot":""}